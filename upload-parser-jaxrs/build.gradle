ext.moduleName = 'com.github.elopteryx.upload.rs'

dependencies {

    /* Upload parser. */
    implementation(project(':upload-parser-core'))

    /* Servlet API. */
    compileOnly("javax.servlet:javax.servlet-api:$servletApiVersion")

    /* Restful web services API. */
    compileOnly("javax.ws.rs:javax.ws.rs-api:$jaxrsApiVersion")

}

compileJava {
    inputs.property('moduleName', moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

jar {
    manifest {
        attributes(
                'Created-By': 'Creative Elopteryx',
                'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
                'Automatic-Module-Name': 'com.github.elopteryx.upload.rs',
                'Implementation-Version': archiveVersion
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'upload-parser-jaxrs'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Upload Parser Jax-Rs'
                groupId = 'com.github.elopteryx'
                artifactId = 'upload-parser-jaxrs'

                description = 'Upload Parser Jax-Rs is a file upload library for Jax-Rs applications.'
                url = 'https://github.com/Elopteryx/upload-parser'

                scm {
                    connection = 'scm:git:git@github.com/Elopteryx/upload-parser.git'
                    developerConnection = 'scm:git:git@github.com/Elopteryx/upload-parser.git'
                    url = 'scm:git:git@github.com/Elopteryx/upload-parser.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'elopteryx'
                        name = 'Adam Forgacs'
                        email = 'creative.elopteryx@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
